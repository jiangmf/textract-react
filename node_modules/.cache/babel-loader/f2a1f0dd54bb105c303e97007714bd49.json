{"ast":null,"code":"import { __awaiter, __generator, __values } from \"tslib\";\nimport { getChecksum } from \"./getChecksum\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nexport var validateChecksumFromResponse = function (response, _a) {\n  var config = _a.config,\n      responseAlgorithms = _a.responseAlgorithms;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var checksumAlgorithms, responseBody, responseHeaders, checksumAlgorithms_1, checksumAlgorithms_1_1, algorithm, responseHeader, checksumFromResponse, checksumAlgorithmFn, streamHasher, base64Encoder, checksum, e_1_1;\n\n    var e_1, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n          responseBody = response.body, responseHeaders = response.headers;\n          _c.label = 1;\n\n        case 1:\n          _c.trys.push([1, 6, 7, 8]);\n\n          checksumAlgorithms_1 = __values(checksumAlgorithms), checksumAlgorithms_1_1 = checksumAlgorithms_1.next();\n          _c.label = 2;\n\n        case 2:\n          if (!!checksumAlgorithms_1_1.done) return [3, 5];\n          algorithm = checksumAlgorithms_1_1.value;\n          responseHeader = getChecksumLocationName(algorithm);\n          checksumFromResponse = responseHeaders[responseHeader];\n          if (!checksumFromResponse) return [3, 4];\n          checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n          streamHasher = config.streamHasher, base64Encoder = config.base64Encoder;\n          return [4, getChecksum(responseBody, {\n            streamHasher: streamHasher,\n            checksumAlgorithmFn: checksumAlgorithmFn,\n            base64Encoder: base64Encoder\n          })];\n\n        case 3:\n          checksum = _c.sent();\n\n          if (checksum === checksumFromResponse) {\n            return [3, 5];\n          }\n\n          throw new Error(\"Checksum mismatch: expected \\\"\".concat(checksum, \"\\\" but received \\\"\").concat(checksumFromResponse, \"\\\"\") + \" in response header \\\"\".concat(responseHeader, \"\\\".\"));\n\n        case 4:\n          checksumAlgorithms_1_1 = checksumAlgorithms_1.next();\n          return [3, 2];\n\n        case 5:\n          return [3, 8];\n\n        case 6:\n          e_1_1 = _c.sent();\n          e_1 = {\n            error: e_1_1\n          };\n          return [3, 8];\n\n        case 7:\n          try {\n            if (checksumAlgorithms_1_1 && !checksumAlgorithms_1_1.done && (_b = checksumAlgorithms_1.return)) _b.call(checksumAlgorithms_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n\n          return [7];\n\n        case 8:\n          return [2];\n      }\n    });\n  });\n};","map":{"version":3,"names":["__awaiter","__generator","__values","getChecksum","getChecksumAlgorithmListForResponse","getChecksumLocationName","selectChecksumAlgorithmFunction","validateChecksumFromResponse","response","_a","config","responseAlgorithms","checksumAlgorithms","responseBody","responseHeaders","checksumAlgorithms_1","checksumAlgorithms_1_1","algorithm","responseHeader","checksumFromResponse","checksumAlgorithmFn","streamHasher","base64Encoder","checksum","e_1_1","e_1","_b","_c","label","body","headers","trys","push","next","done","value","sent","Error","concat","error","return","call"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/validateChecksumFromResponse.js"],"sourcesContent":["import { __awaiter, __generator, __values } from \"tslib\";\nimport { getChecksum } from \"./getChecksum\";\nimport { getChecksumAlgorithmListForResponse } from \"./getChecksumAlgorithmListForResponse\";\nimport { getChecksumLocationName } from \"./getChecksumLocationName\";\nimport { selectChecksumAlgorithmFunction } from \"./selectChecksumAlgorithmFunction\";\nexport var validateChecksumFromResponse = function (response, _a) {\n    var config = _a.config, responseAlgorithms = _a.responseAlgorithms;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var checksumAlgorithms, responseBody, responseHeaders, checksumAlgorithms_1, checksumAlgorithms_1_1, algorithm, responseHeader, checksumFromResponse, checksumAlgorithmFn, streamHasher, base64Encoder, checksum, e_1_1;\n        var e_1, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);\n                    responseBody = response.body, responseHeaders = response.headers;\n                    _c.label = 1;\n                case 1:\n                    _c.trys.push([1, 6, 7, 8]);\n                    checksumAlgorithms_1 = __values(checksumAlgorithms), checksumAlgorithms_1_1 = checksumAlgorithms_1.next();\n                    _c.label = 2;\n                case 2:\n                    if (!!checksumAlgorithms_1_1.done) return [3, 5];\n                    algorithm = checksumAlgorithms_1_1.value;\n                    responseHeader = getChecksumLocationName(algorithm);\n                    checksumFromResponse = responseHeaders[responseHeader];\n                    if (!checksumFromResponse) return [3, 4];\n                    checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);\n                    streamHasher = config.streamHasher, base64Encoder = config.base64Encoder;\n                    return [4, getChecksum(responseBody, { streamHasher: streamHasher, checksumAlgorithmFn: checksumAlgorithmFn, base64Encoder: base64Encoder })];\n                case 3:\n                    checksum = _c.sent();\n                    if (checksum === checksumFromResponse) {\n                        return [3, 5];\n                    }\n                    throw new Error(\"Checksum mismatch: expected \\\"\".concat(checksum, \"\\\" but received \\\"\").concat(checksumFromResponse, \"\\\"\") +\n                        \" in response header \\\"\".concat(responseHeader, \"\\\".\"));\n                case 4:\n                    checksumAlgorithms_1_1 = checksumAlgorithms_1.next();\n                    return [3, 2];\n                case 5: return [3, 8];\n                case 6:\n                    e_1_1 = _c.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3, 8];\n                case 7:\n                    try {\n                        if (checksumAlgorithms_1_1 && !checksumAlgorithms_1_1.done && (_b = checksumAlgorithms_1.return)) _b.call(checksumAlgorithms_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7];\n                case 8: return [2];\n            }\n        });\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}