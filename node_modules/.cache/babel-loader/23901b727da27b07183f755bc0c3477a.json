{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icean\\\\aws-doc-sdk-examples\\\\javascriptv3\\\\example_code\\\\cross-services\\\\textract-react\\\\src\\\\ImageLoader.js\",\n    _s = $RefreshSig$();\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from \"react\";\n/**\r\n * A panel of inputs to specify an image location in an Amazon S3 bucket.\r\n *\r\n * @param props: Properties that control how the panel is displayed.\r\n *        props.canLoad: Indicates whether an image can be loaded.\r\n *        props.loadImage: A function that loads the image from the specified location.\r\n *        props.imageBucket: The name of the Amazon S3 bucket where the image is stored.\r\n *        props.imageKey: The name of the image file stored in Amazon S3.\r\n *        props.modelError: Indicates an underlying error.\r\n * @returns {JSX.Element}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageLoader = props => {\n  _s();\n\n  const [imageBucket, setImageBucket] = useState(props.imageBucket);\n  const [imageKey, setImageKey] = useState(props.imageKey);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title mb-3\",\n        children: \"Image location (in Amazon S3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: \"Load an image file from Amazon S3, then select Extract to explore image data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageBucket\",\n            children: \"Bucket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"imageBucket\",\n            value: imageBucket,\n            onChange: event => setImageBucket(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageKey\",\n            children: \"Image name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"imageKey\",\n            value: imageKey,\n            onChange: event => setImageKey(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            disabled: !props.canLoad,\n            onClick: () => props.loadImage(imageBucket, imageKey),\n            children: \"Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-danger ${props.modelError ? \"\" : \"visually-hidden\"}`,\n          role: \"status\",\n          children: props.modelError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageLoader, \"EficPNi49tz/jjvDqdQPZUD7PtM=\");\n\n_c = ImageLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageLoader\");","map":{"version":3,"names":["React","useState","ImageLoader","props","imageBucket","setImageBucket","imageKey","setImageKey","event","target","value","canLoad","loadImage","modelError"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/src/ImageLoader.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport React, { useState } from \"react\";\r\n\r\n/**\r\n * A panel of inputs to specify an image location in an Amazon S3 bucket.\r\n *\r\n * @param props: Properties that control how the panel is displayed.\r\n *        props.canLoad: Indicates whether an image can be loaded.\r\n *        props.loadImage: A function that loads the image from the specified location.\r\n *        props.imageBucket: The name of the Amazon S3 bucket where the image is stored.\r\n *        props.imageKey: The name of the image file stored in Amazon S3.\r\n *        props.modelError: Indicates an underlying error.\r\n * @returns {JSX.Element}\r\n */\r\nexport const ImageLoader = (props) => {\r\n  const [imageBucket, setImageBucket] = useState(props.imageBucket);\r\n  const [imageKey, setImageKey] = useState(props.imageKey);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title mb-3\">Image location (in Amazon S3)</h5>\r\n        <form>\r\n          <div className=\"form-text\">\r\n            Load an image file from Amazon S3, then select Extract to explore\r\n            image data.\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"imageBucket\">Bucket</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"imageBucket\"\r\n              value={imageBucket}\r\n              onChange={(event) => setImageBucket(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"imageKey\">Image name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"imageKey\"\r\n              value={imageKey}\r\n              onChange={(event) => setImageKey(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              disabled={!props.canLoad}\r\n              onClick={() => props.loadImage(imageBucket, imageKey)}\r\n            >\r\n              Load\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={`alert alert-danger ${\r\n              props.modelError ? \"\" : \"visually-hidden\"\r\n            }`}\r\n            role=\"status\"\r\n          >\r\n            {props.modelError}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EACpC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAACE,KAAK,CAACC,WAAP,CAA9C;EACA,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACE,KAAK,CAACG,QAAP,CAAxC;EAEA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,iBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAK,SAAS,EAAC,WAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,MAAf;UAAA,wBACE;YAAO,OAAO,EAAC,aAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,IAAI,EAAC,MADP;YAEE,SAAS,EAAC,cAFZ;YAGE,EAAE,EAAC,aAHL;YAIE,KAAK,EAAEF,WAJT;YAKE,QAAQ,EAAGI,KAAD,IAAWH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;UALrC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAeE;UAAK,SAAS,EAAC,MAAf;UAAA,wBACE;YAAO,OAAO,EAAC,UAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,IAAI,EAAC,MADP;YAEE,SAAS,EAAC,cAFZ;YAGE,EAAE,EAAC,UAHL;YAIE,KAAK,EAAEJ,QAJT;YAKE,QAAQ,EAAGE,KAAD,IAAWD,WAAW,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;UALlC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF,eAyBE;UAAK,SAAS,EAAC,MAAf;UAAA,uBACE;YACE,IAAI,EAAC,QADP;YAEE,SAAS,EAAC,iBAFZ;YAGE,QAAQ,EAAE,CAACP,KAAK,CAACQ,OAHnB;YAIE,OAAO,EAAE,MAAMR,KAAK,CAACS,SAAN,CAAgBR,WAAhB,EAA6BE,QAA7B,CAJjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAzBF,eAmCE;UACE,SAAS,EAAG,sBACVH,KAAK,CAACU,UAAN,GAAmB,EAAnB,GAAwB,iBACzB,EAHH;UAIE,IAAI,EAAC,QAJP;UAAA,UAMGV,KAAK,CAACU;QANT;UAAA;UAAA;UAAA;QAAA,QAnCF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmDD,CAvDM;;GAAMX,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}