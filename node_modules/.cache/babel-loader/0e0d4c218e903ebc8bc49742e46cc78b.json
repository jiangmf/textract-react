{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nexport function receiveMessageMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var resp, output, messageIds, _a, _b, message, md5, hash, _c, _d, e_1_1;\n\n        var e_1, _e;\n\n        return __generator(this, function (_f) {\n          switch (_f.label) {\n            case 0:\n              return [4, next(__assign({}, args))];\n\n            case 1:\n              resp = _f.sent();\n              output = resp.output;\n              messageIds = [];\n              if (!(output.Messages !== undefined)) return [3, 9];\n              _f.label = 2;\n\n            case 2:\n              _f.trys.push([2, 7, 8, 9]);\n\n              _a = __values(output.Messages), _b = _a.next();\n              _f.label = 3;\n\n            case 3:\n              if (!!_b.done) return [3, 6];\n              message = _b.value;\n              md5 = message.MD5OfBody;\n              hash = new options.md5();\n              hash.update(message.Body || \"\");\n              _c = md5;\n              _d = toHex;\n              return [4, hash.digest()];\n\n            case 4:\n              if (_c !== _d.apply(void 0, [_f.sent()])) {\n                messageIds.push(message.MessageId);\n              }\n\n              _f.label = 5;\n\n            case 5:\n              _b = _a.next();\n              return [3, 3];\n\n            case 6:\n              return [3, 9];\n\n            case 7:\n              e_1_1 = _f.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3, 9];\n\n            case 8:\n              try {\n                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7];\n\n            case 9:\n              if (messageIds.length > 0) {\n                throw new Error(\"Invalid MD5 checksum on messages: \" + messageIds.join(\", \"));\n              }\n\n              return [2, resp];\n          }\n        });\n      });\n    };\n  };\n}\nexport var receiveMessageMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BODY_MD5\"],\n  name: \"receiveMessageMiddleware\",\n  override: true\n};\nexport var getReceiveMessagePlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(receiveMessageMiddleware(config), receiveMessageMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","__values","toHex","receiveMessageMiddleware","options","_this","next","args","resp","output","messageIds","_a","_b","message","md5","hash","_c","_d","e_1_1","e_1","_e","_f","label","sent","Messages","undefined","trys","push","done","value","MD5OfBody","update","Body","digest","apply","MessageId","error","return","call","length","Error","join","receiveMessageMiddlewareOptions","step","tags","name","override","getReceiveMessagePlugin","config","applyToStack","clientStack","add"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/node_modules/@aws-sdk/middleware-sdk-sqs/dist-es/receive-message.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nexport function receiveMessageMiddleware(options) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var resp, output, messageIds, _a, _b, message, md5, hash, _c, _d, e_1_1;\n            var e_1, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0: return [4, next(__assign({}, args))];\n                    case 1:\n                        resp = _f.sent();\n                        output = resp.output;\n                        messageIds = [];\n                        if (!(output.Messages !== undefined)) return [3, 9];\n                        _f.label = 2;\n                    case 2:\n                        _f.trys.push([2, 7, 8, 9]);\n                        _a = __values(output.Messages), _b = _a.next();\n                        _f.label = 3;\n                    case 3:\n                        if (!!_b.done) return [3, 6];\n                        message = _b.value;\n                        md5 = message.MD5OfBody;\n                        hash = new options.md5();\n                        hash.update(message.Body || \"\");\n                        _c = md5;\n                        _d = toHex;\n                        return [4, hash.digest()];\n                    case 4:\n                        if (_c !== _d.apply(void 0, [_f.sent()])) {\n                            messageIds.push(message.MessageId);\n                        }\n                        _f.label = 5;\n                    case 5:\n                        _b = _a.next();\n                        return [3, 3];\n                    case 6: return [3, 9];\n                    case 7:\n                        e_1_1 = _f.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3, 9];\n                    case 8:\n                        try {\n                            if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7];\n                    case 9:\n                        if (messageIds.length > 0) {\n                            throw new Error(\"Invalid MD5 checksum on messages: \" + messageIds.join(\", \"));\n                        }\n                        return [2, resp];\n                }\n            });\n        }); };\n    };\n}\nexport var receiveMessageMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"VALIDATE_BODY_MD5\"],\n    name: \"receiveMessageMiddleware\",\n    override: true,\n};\nexport var getReceiveMessagePlugin = function (config) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(receiveMessageMiddleware(config), receiveMessageMiddlewareOptions);\n    },\n}); };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}