{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoIdentityClient } from \"@aws-sdk/client-cognito-identity\";\nimport { fromCognitoIdentityPool } from \"@aws-sdk/credential-provider-cognito-identity\";\nimport { TextractClient } from \"@aws-sdk/client-textract\";\nimport { S3Client } from \"@aws-sdk/client-s3\";\nimport { SQSClient } from \"@aws-sdk/client-sqs\";\n/**\r\n * A factory that creates AWS clients used by the demo application.\r\n * This application requires an authenticated Amazon Cognito identity to grant\r\n * permissions.\r\n *\r\n * @param cognitoId: The ID of the Amazon Cognito identity provider for the user pool.\r\n * @param cognitoToken: The token for the session generated by Amazon Cognito.\r\n * @param cognitoIdentityPoolId: The ID of the Amazon Cognito identity pool that\r\n *                               contains the logged in user.\r\n * @param deployRegion: The AWS Region where the AWS resources are deployed for the\r\n *                      demo.\r\n * @returns {{}}: The AWS clients, initialized with Amazon Cognito identity credentials.\r\n */\n\nexport const awsFactory = _ref => {\n  let {\n    cognitoId,\n    cognitoToken,\n    cognitoIdentityPoolId,\n    deployRegion\n  } = _ref;\n  const creds = fromCognitoIdentityPool({\n    client: new CognitoIdentityClient({\n      region: deployRegion\n    }),\n    identityPoolId: cognitoIdentityPoolId,\n    logins: {\n      [cognitoId]: cognitoToken\n    }\n  });\n  const clients = {};\n  clients[\"s3\"] = new S3Client({\n    region: deployRegion,\n    credentials: creds\n  });\n  clients[\"textract\"] = new TextractClient({\n    region: deployRegion,\n    credentials: creds\n  });\n  clients[\"sqs\"] = new SQSClient({\n    region: deployRegion,\n    credentials: creds\n  });\n  return clients;\n};","map":{"version":3,"names":["CognitoIdentityClient","fromCognitoIdentityPool","TextractClient","S3Client","SQSClient","awsFactory","cognitoId","cognitoToken","cognitoIdentityPoolId","deployRegion","creds","client","region","identityPoolId","logins","clients","credentials"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/src/AwsFactory.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { CognitoIdentityClient } from \"@aws-sdk/client-cognito-identity\";\r\nimport { fromCognitoIdentityPool } from \"@aws-sdk/credential-provider-cognito-identity\";\r\nimport { TextractClient } from \"@aws-sdk/client-textract\";\r\nimport { S3Client } from \"@aws-sdk/client-s3\";\r\nimport { SQSClient } from \"@aws-sdk/client-sqs\";\r\n\r\n/**\r\n * A factory that creates AWS clients used by the demo application.\r\n * This application requires an authenticated Amazon Cognito identity to grant\r\n * permissions.\r\n *\r\n * @param cognitoId: The ID of the Amazon Cognito identity provider for the user pool.\r\n * @param cognitoToken: The token for the session generated by Amazon Cognito.\r\n * @param cognitoIdentityPoolId: The ID of the Amazon Cognito identity pool that\r\n *                               contains the logged in user.\r\n * @param deployRegion: The AWS Region where the AWS resources are deployed for the\r\n *                      demo.\r\n * @returns {{}}: The AWS clients, initialized with Amazon Cognito identity credentials.\r\n */\r\nexport const awsFactory = ({\r\n  cognitoId,\r\n  cognitoToken,\r\n  cognitoIdentityPoolId,\r\n  deployRegion,\r\n}) => {\r\n  const creds = fromCognitoIdentityPool({\r\n    client: new CognitoIdentityClient({ region: deployRegion }),\r\n    identityPoolId: cognitoIdentityPoolId,\r\n    logins: { [cognitoId]: cognitoToken },\r\n  });\r\n\r\n  const clients = {};\r\n  clients[\"s3\"] = new S3Client({\r\n    region: deployRegion,\r\n    credentials: creds,\r\n  });\r\n\r\n  clients[\"textract\"] = new TextractClient({\r\n    region: deployRegion,\r\n    credentials: creds,\r\n  });\r\n\r\n  clients[\"sqs\"] = new SQSClient({\r\n    region: deployRegion,\r\n    credentials: creds,\r\n  });\r\n\r\n  return clients;\r\n};\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,qBAAT,QAAsC,kCAAtC;AACA,SAASC,uBAAT,QAAwC,+CAAxC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,QAKpB;EAAA,IALqB;IACzBC,SADyB;IAEzBC,YAFyB;IAGzBC,qBAHyB;IAIzBC;EAJyB,CAKrB;EACJ,MAAMC,KAAK,GAAGT,uBAAuB,CAAC;IACpCU,MAAM,EAAE,IAAIX,qBAAJ,CAA0B;MAAEY,MAAM,EAAEH;IAAV,CAA1B,CAD4B;IAEpCI,cAAc,EAAEL,qBAFoB;IAGpCM,MAAM,EAAE;MAAE,CAACR,SAAD,GAAaC;IAAf;EAH4B,CAAD,CAArC;EAMA,MAAMQ,OAAO,GAAG,EAAhB;EACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,IAAIZ,QAAJ,CAAa;IAC3BS,MAAM,EAAEH,YADmB;IAE3BO,WAAW,EAAEN;EAFc,CAAb,CAAhB;EAKAK,OAAO,CAAC,UAAD,CAAP,GAAsB,IAAIb,cAAJ,CAAmB;IACvCU,MAAM,EAAEH,YAD+B;IAEvCO,WAAW,EAAEN;EAF0B,CAAnB,CAAtB;EAKAK,OAAO,CAAC,KAAD,CAAP,GAAiB,IAAIX,SAAJ,CAAc;IAC7BQ,MAAM,EAAEH,YADqB;IAE7BO,WAAW,EAAEN;EAFgB,CAAd,CAAjB;EAKA,OAAOK,OAAP;AACD,CA7BM"},"metadata":{},"sourceType":"module"}