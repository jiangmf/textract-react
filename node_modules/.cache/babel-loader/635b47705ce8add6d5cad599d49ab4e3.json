{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icean\\\\aws-doc-sdk-examples\\\\javascriptv3\\\\example_code\\\\cross-services\\\\textract-react\\\\src\\\\ExtractButtons.js\",\n    _s = $RefreshSig$();\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from \"react\";\n/**\r\n * A toolbar of buttons that control the kind of Amazon Textract job that is\r\n * performed.\r\n *\r\n * @param props: Properties that determine how the buttons are displayed.\r\n *        props.hasImage: Indicates whether an image is currently loaded.\r\n *        props.extract: A function that starts an Amazon Textract job.\r\n *        props.extracting: Indicates whether an extraction job is currently in\r\n *                          progress.\r\n * @returns {JSX.Element}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExtractButtons = props => {\n  _s();\n\n  const [syncSelection, setSyncSelection] = useState(\"sync\");\n  const [extractType, setExtractType] = useState(\"text\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-toolbar\",\n    role: \"toolbar\",\n    \"aria-label\": \"Toolbar with button groups\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group me-2\",\n      role: \"group\",\n      \"aria-label\": \"Sync/async group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"btn-check\",\n        name: \"syncAsyncRadio\",\n        id: \"syncRadio\",\n        value: \"sync\",\n        checked: syncSelection === \"sync\",\n        disabled: !props.hasImage,\n        onChange: event => setSyncSelection(event.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        htmlFor: \"syncRadio\",\n        children: \"Synchronous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"btn-check\",\n        name: \"syncAsyncRadio\",\n        id: \"asyncRadio\",\n        value: \"async\",\n        checked: syncSelection === \"async\",\n        disabled: !props.hasImage,\n        onChange: event => setSyncSelection(event.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        htmlFor: \"asyncRadio\",\n        children: \"Asynchronous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group me-2\",\n      role: \"group\",\n      \"aria-label\": \"Extract type group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"btn-check\",\n        name: \"extractRadio\",\n        id: \"textRadio\",\n        value: \"text\",\n        checked: extractType === \"text\",\n        disabled: !props.hasImage,\n        onChange: event => setExtractType(event.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        htmlFor: \"textRadio\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"btn-check\",\n        name: \"extractRadio\",\n        id: \"tableRadio\",\n        value: \"table\",\n        checked: extractType === \"table\",\n        disabled: !props.hasImage,\n        onChange: event => setExtractType(event.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        htmlFor: \"tableRadio\",\n        children: \"Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"btn-check\",\n        name: \"extractRadio\",\n        id: \"formRadio\",\n        value: \"form\",\n        checked: extractType === \"form\",\n        disabled: !props.hasImage,\n        onChange: event => setExtractType(event.target.value),\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        htmlFor: \"formRadio\",\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Extract group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        disabled: !props.hasImage || props.extracting,\n        onClick: () => props.extract(syncSelection, extractType),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `spinner-border spinner-border-sm ${props.extracting ? \"\" : \"visually-hidden\"}`,\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Extracting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: props.extracting ? \"visually-hidden\" : \"\",\n          id: \"extractSpan\",\n          children: \"Extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExtractButtons, \"hE0Ea0Byjz3dmWEeIMe4EDmw3KY=\");\n\n_c = ExtractButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtractButtons\");","map":{"version":3,"names":["React","useState","ExtractButtons","props","syncSelection","setSyncSelection","extractType","setExtractType","hasImage","event","target","value","extracting","extract"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/src/ExtractButtons.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport React, { useState } from \"react\";\r\n\r\n/**\r\n * A toolbar of buttons that control the kind of Amazon Textract job that is\r\n * performed.\r\n *\r\n * @param props: Properties that determine how the buttons are displayed.\r\n *        props.hasImage: Indicates whether an image is currently loaded.\r\n *        props.extract: A function that starts an Amazon Textract job.\r\n *        props.extracting: Indicates whether an extraction job is currently in\r\n *                          progress.\r\n * @returns {JSX.Element}\r\n */\r\nexport const ExtractButtons = (props) => {\r\n  const [syncSelection, setSyncSelection] = useState(\"sync\");\r\n  const [extractType, setExtractType] = useState(\"text\");\r\n\r\n  return (\r\n    <div\r\n      className=\"btn-toolbar\"\r\n      role=\"toolbar\"\r\n      aria-label=\"Toolbar with button groups\"\r\n    >\r\n      <div\r\n        className=\"btn-group me-2\"\r\n        role=\"group\"\r\n        aria-label=\"Sync/async group\"\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          className=\"btn-check\"\r\n          name=\"syncAsyncRadio\"\r\n          id=\"syncRadio\"\r\n          value=\"sync\"\r\n          checked={syncSelection === \"sync\"}\r\n          disabled={!props.hasImage}\r\n          onChange={(event) => setSyncSelection(event.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <label className=\"btn btn-outline-secondary\" htmlFor=\"syncRadio\">\r\n          Synchronous\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"btn-check\"\r\n          name=\"syncAsyncRadio\"\r\n          id=\"asyncRadio\"\r\n          value=\"async\"\r\n          checked={syncSelection === \"async\"}\r\n          disabled={!props.hasImage}\r\n          onChange={(event) => setSyncSelection(event.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <label className=\"btn btn-outline-secondary\" htmlFor=\"asyncRadio\">\r\n          Asynchronous\r\n        </label>\r\n      </div>\r\n      <div\r\n        className=\"btn-group me-2\"\r\n        role=\"group\"\r\n        aria-label=\"Extract type group\"\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          className=\"btn-check\"\r\n          name=\"extractRadio\"\r\n          id=\"textRadio\"\r\n          value=\"text\"\r\n          checked={extractType === \"text\"}\r\n          disabled={!props.hasImage}\r\n          onChange={(event) => setExtractType(event.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <label className=\"btn btn-outline-secondary\" htmlFor=\"textRadio\">\r\n          Text\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"btn-check\"\r\n          name=\"extractRadio\"\r\n          id=\"tableRadio\"\r\n          value=\"table\"\r\n          checked={extractType === \"table\"}\r\n          disabled={!props.hasImage}\r\n          onChange={(event) => setExtractType(event.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <label className=\"btn btn-outline-secondary\" htmlFor=\"tableRadio\">\r\n          Table\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"btn-check\"\r\n          name=\"extractRadio\"\r\n          id=\"formRadio\"\r\n          value=\"form\"\r\n          checked={extractType === \"form\"}\r\n          disabled={!props.hasImage}\r\n          onChange={(event) => setExtractType(event.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <label className=\"btn btn-outline-secondary\" htmlFor=\"formRadio\">\r\n          Form\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Extract group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          disabled={!props.hasImage || props.extracting}\r\n          onClick={() => props.extract(syncSelection, extractType)}\r\n        >\r\n          <span\r\n            className={`spinner-border spinner-border-sm ${\r\n              props.extracting ? \"\" : \"visually-hidden\"\r\n            }`}\r\n            role=\"status\"\r\n          />\r\n          <span className=\"visually-hidden\">Extracting...</span>\r\n          <span\r\n            className={props.extracting ? \"visually-hidden\" : \"\"}\r\n            id=\"extractSpan\"\r\n          >\r\n            Extract\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}