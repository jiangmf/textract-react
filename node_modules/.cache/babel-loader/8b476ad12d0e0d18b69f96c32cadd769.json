{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icean\\\\aws-doc-sdk-examples\\\\javascriptv3\\\\example_code\\\\cross-services\\\\textract-react\\\\src\\\\ExplorerCard.js\",\n    _s = $RefreshSig$();\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from \"react\";\nimport { ExplorerTree } from \"./ExplorerTree\";\n/**\r\n * Displays output from Amazon Textract as a hierarchical tree of checkboxes.\r\n * Select a checkbox to display the bounding polygon over the original image.\r\n *\r\n * @param props: Properties that determine how the panel is displayed.\r\n *        props.extracting: Indicates whether an extraction job is currently being\r\n *                          processed.\r\n *        props.extraction: The data returned from Amazon Textract, formatted into\r\n *                          a hierarchical tree structure.\r\n *        props.header: Text to display as a header.\r\n *        props.shownPolygons: The list of polygons currently being displayed.\r\n *        props.togglePolygon: A function that toggles a polygon on or off.\r\n * @returns {JSX.Element}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExplorerCard = props => {\n  _s();\n\n  const cardRef = useRef();\n  let subtitle = null;\n  let instructions = \"Extracted data is shown here so you can explore it.\";\n  let tree = null;\n\n  if (props.extraction) {\n    subtitle = `Showing extracted ${props.extraction.ExtractType} data`;\n    instructions = \"Click an element to draw its bounding polygon.\";\n    tree = /*#__PURE__*/_jsxDEV(ExplorerTree, {\n      extracting: props.extracting,\n      extraction: props.extraction,\n      togglePolygon: props.togglePolygon,\n      shownPolygons: props.shownPolygons,\n      headerHeight: cardRef.current ? cardRef.current.offsetHeight : 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    ref: cardRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle mb-2 text-muted\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `d-flex justify-content-center m-4 ${props.extracting ? \"\" : \"visually-hidden\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-success\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.extracting ? \"visually-hidden\" : \"\",\n        children: tree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExplorerCard, \"Ke3e4lS6TeRJwxO7SyTGw/KidUE=\");\n\n_c = ExplorerCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExplorerCard\");","map":{"version":3,"names":["React","useRef","ExplorerTree","ExplorerCard","props","cardRef","subtitle","instructions","tree","extraction","ExtractType","extracting","togglePolygon","shownPolygons","current","offsetHeight","header"],"sources":["C:/Users/icean/aws-doc-sdk-examples/javascriptv3/example_code/cross-services/textract-react/src/ExplorerCard.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport React, { useRef } from \"react\";\r\nimport { ExplorerTree } from \"./ExplorerTree\";\r\n\r\n/**\r\n * Displays output from Amazon Textract as a hierarchical tree of checkboxes.\r\n * Select a checkbox to display the bounding polygon over the original image.\r\n *\r\n * @param props: Properties that determine how the panel is displayed.\r\n *        props.extracting: Indicates whether an extraction job is currently being\r\n *                          processed.\r\n *        props.extraction: The data returned from Amazon Textract, formatted into\r\n *                          a hierarchical tree structure.\r\n *        props.header: Text to display as a header.\r\n *        props.shownPolygons: The list of polygons currently being displayed.\r\n *        props.togglePolygon: A function that toggles a polygon on or off.\r\n * @returns {JSX.Element}\r\n */\r\nexport const ExplorerCard = (props) => {\r\n  const cardRef = useRef();\r\n  let subtitle = null;\r\n  let instructions = \"Extracted data is shown here so you can explore it.\";\r\n  let tree = null;\r\n  if (props.extraction) {\r\n    subtitle = `Showing extracted ${props.extraction.ExtractType} data`;\r\n    instructions = \"Click an element to draw its bounding polygon.\";\r\n    tree = (\r\n      <ExplorerTree\r\n        extracting={props.extracting}\r\n        extraction={props.extraction}\r\n        togglePolygon={props.togglePolygon}\r\n        shownPolygons={props.shownPolygons}\r\n        headerHeight={cardRef.current ? cardRef.current.offsetHeight : 10}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" ref={cardRef}>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.header}</h5>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">{subtitle}</h6>\r\n        <p className=\"card-text\">{instructions}</p>\r\n        <div\r\n          className={`d-flex justify-content-center m-4 ${\r\n            props.extracting ? \"\" : \"visually-hidden\"\r\n          }`}\r\n        >\r\n          <div className=\"spinner-border text-success\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n        <div className={props.extracting ? \"visually-hidden\" : \"\"}>{tree}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EACrC,MAAMC,OAAO,GAAGJ,MAAM,EAAtB;EACA,IAAIK,QAAQ,GAAG,IAAf;EACA,IAAIC,YAAY,GAAG,qDAAnB;EACA,IAAIC,IAAI,GAAG,IAAX;;EACA,IAAIJ,KAAK,CAACK,UAAV,EAAsB;IACpBH,QAAQ,GAAI,qBAAoBF,KAAK,CAACK,UAAN,CAAiBC,WAAY,OAA7D;IACAH,YAAY,GAAG,gDAAf;IACAC,IAAI,gBACF,QAAC,YAAD;MACE,UAAU,EAAEJ,KAAK,CAACO,UADpB;MAEE,UAAU,EAAEP,KAAK,CAACK,UAFpB;MAGE,aAAa,EAAEL,KAAK,CAACQ,aAHvB;MAIE,aAAa,EAAER,KAAK,CAACS,aAJvB;MAKE,YAAY,EAAER,OAAO,CAACS,OAAR,GAAkBT,OAAO,CAACS,OAAR,CAAgBC,YAAlC,GAAiD;IALjE;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAsB,GAAG,EAAEV,OAA3B;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,YAAd;QAAA,UAA4BD,KAAK,CAACY;MAAlC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,+BAAd;QAAA,UAA+CV;MAA/C;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,WAAb;QAAA,UAA0BC;MAA1B;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QACE,SAAS,EAAG,qCACVH,KAAK,CAACO,UAAN,GAAmB,EAAnB,GAAwB,iBACzB,EAHH;QAAA,uBAKE;UAAK,SAAS,EAAC,6BAAf;UAA6C,IAAI,EAAC,QAAlD;UAAA,uBACE;YAAM,SAAS,EAAC,iBAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA,QAJF,eAaE;QAAK,SAAS,EAAEP,KAAK,CAACO,UAAN,GAAmB,iBAAnB,GAAuC,EAAvD;QAAA,UAA4DH;MAA5D;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAtCM;;GAAML,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}