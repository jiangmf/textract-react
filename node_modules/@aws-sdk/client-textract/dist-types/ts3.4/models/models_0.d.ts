import { ExceptionOptionType as __ExceptionOptionType, LazyJsonString as __LazyJsonString } from "@aws-sdk/smithy-client";
import { TextractServiceException as __BaseException } from "./TextractServiceException";

export declare class AccessDeniedException extends __BaseException {
    readonly name: "AccessDeniedException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
}

export interface S3Object {
    
    Bucket?: string;
    
    Name?: string;
    
    Version?: string;
}

export interface Document {
    
    Bytes?: Uint8Array;
    
    S3Object?: S3Object;
}
export declare enum FeatureType {
    FORMS = "FORMS",
    QUERIES = "QUERIES",
    TABLES = "TABLES"
}
export declare enum ContentClassifier {
    FREE_OF_ADULT_CONTENT = "FreeOfAdultContent",
    FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION = "FreeOfPersonallyIdentifiableInformation"
}

export interface HumanLoopDataAttributes {
    
    ContentClassifiers?: (ContentClassifier | string)[];
}

export interface HumanLoopConfig {
    
    HumanLoopName: string | undefined;
    
    FlowDefinitionArn: string | undefined;
    
    DataAttributes?: HumanLoopDataAttributes;
}

export interface Query {
    
    Text: string | undefined;
    
    Alias?: string;
    
    Pages?: string[];
}

export interface QueriesConfig {
    
    Queries: Query[] | undefined;
}
export interface AnalyzeDocumentRequest {
    
    Document: Document | undefined;
    
    FeatureTypes: (FeatureType | string)[] | undefined;
    
    HumanLoopConfig?: HumanLoopConfig;
    
    QueriesConfig?: QueriesConfig;
}
export declare enum BlockType {
    CELL = "CELL",
    KEY_VALUE_SET = "KEY_VALUE_SET",
    LINE = "LINE",
    MERGED_CELL = "MERGED_CELL",
    PAGE = "PAGE",
    QUERY = "QUERY",
    QUERY_RESULT = "QUERY_RESULT",
    SELECTION_ELEMENT = "SELECTION_ELEMENT",
    TABLE = "TABLE",
    TITLE = "TITLE",
    WORD = "WORD"
}
export declare enum EntityType {
    COLUMN_HEADER = "COLUMN_HEADER",
    KEY = "KEY",
    VALUE = "VALUE"
}

export interface BoundingBox {
    
    Width?: number;
    
    Height?: number;
    
    Left?: number;
    
    Top?: number;
}

export interface Point {
    
    X?: number;
    
    Y?: number;
}

export interface Geometry {
    
    BoundingBox?: BoundingBox;
    
    Polygon?: Point[];
}
export declare enum RelationshipType {
    ANSWER = "ANSWER",
    CHILD = "CHILD",
    COMPLEX_FEATURES = "COMPLEX_FEATURES",
    MERGED_CELL = "MERGED_CELL",
    TITLE = "TITLE",
    VALUE = "VALUE"
}

export interface Relationship {
    
    Type?: RelationshipType | string;
    
    Ids?: string[];
}
export declare enum SelectionStatus {
    NOT_SELECTED = "NOT_SELECTED",
    SELECTED = "SELECTED"
}
export declare enum TextType {
    HANDWRITING = "HANDWRITING",
    PRINTED = "PRINTED"
}

export interface Block {
    
    BlockType?: BlockType | string;
    
    Confidence?: number;
    
    Text?: string;
    
    TextType?: TextType | string;
    
    RowIndex?: number;
    
    ColumnIndex?: number;
    
    RowSpan?: number;
    
    ColumnSpan?: number;
    
    Geometry?: Geometry;
    
    Id?: string;
    
    Relationships?: Relationship[];
    
    EntityTypes?: (EntityType | string)[];
    
    SelectionStatus?: SelectionStatus | string;
    
    Page?: number;
    
    Query?: Query;
}

export interface DocumentMetadata {
    
    Pages?: number;
}

export interface HumanLoopActivationOutput {
    
    HumanLoopArn?: string;
    
    HumanLoopActivationReasons?: string[];
    
    HumanLoopActivationConditionsEvaluationResults?: __LazyJsonString | string;
}
export interface AnalyzeDocumentResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    Blocks?: Block[];
    
    HumanLoopActivationOutput?: HumanLoopActivationOutput;
    
    AnalyzeDocumentModelVersion?: string;
}

export declare class BadDocumentException extends __BaseException {
    readonly name: "BadDocumentException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<BadDocumentException, __BaseException>);
}

export declare class DocumentTooLargeException extends __BaseException {
    readonly name: "DocumentTooLargeException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<DocumentTooLargeException, __BaseException>);
}

export declare class HumanLoopQuotaExceededException extends __BaseException {
    readonly name: "HumanLoopQuotaExceededException";
    readonly $fault: "client";
    
    ResourceType?: string;
    
    QuotaCode?: string;
    
    ServiceCode?: string;
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<HumanLoopQuotaExceededException, __BaseException>);
}

export declare class InternalServerError extends __BaseException {
    readonly name: "InternalServerError";
    readonly $fault: "server";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<InternalServerError, __BaseException>);
}

export declare class InvalidParameterException extends __BaseException {
    readonly name: "InvalidParameterException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<InvalidParameterException, __BaseException>);
}

export declare class InvalidS3ObjectException extends __BaseException {
    readonly name: "InvalidS3ObjectException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<InvalidS3ObjectException, __BaseException>);
}

export declare class ProvisionedThroughputExceededException extends __BaseException {
    readonly name: "ProvisionedThroughputExceededException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<ProvisionedThroughputExceededException, __BaseException>);
}

export declare class ThrottlingException extends __BaseException {
    readonly name: "ThrottlingException";
    readonly $fault: "server";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
}

export declare class UnsupportedDocumentException extends __BaseException {
    readonly name: "UnsupportedDocumentException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<UnsupportedDocumentException, __BaseException>);
}
export interface AnalyzeExpenseRequest {
    
    Document: Document | undefined;
}

export interface ExpenseDetection {
    
    Text?: string;
    
    Geometry?: Geometry;
    
    Confidence?: number;
}

export interface ExpenseType {
    
    Text?: string;
    
    Confidence?: number;
}

export interface ExpenseField {
    
    Type?: ExpenseType;
    
    LabelDetection?: ExpenseDetection;
    
    ValueDetection?: ExpenseDetection;
    
    PageNumber?: number;
}

export interface LineItemFields {
    
    LineItemExpenseFields?: ExpenseField[];
}

export interface LineItemGroup {
    
    LineItemGroupIndex?: number;
    
    LineItems?: LineItemFields[];
}

export interface ExpenseDocument {
    
    ExpenseIndex?: number;
    
    SummaryFields?: ExpenseField[];
    
    LineItemGroups?: LineItemGroup[];
}
export interface AnalyzeExpenseResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    ExpenseDocuments?: ExpenseDocument[];
}
export interface AnalyzeIDRequest {
    
    DocumentPages: Document[] | undefined;
}
export declare enum ValueType {
    DATE = "DATE"
}

export interface NormalizedValue {
    
    Value?: string;
    
    ValueType?: ValueType | string;
}

export interface AnalyzeIDDetections {
    
    Text: string | undefined;
    
    NormalizedValue?: NormalizedValue;
    
    Confidence?: number;
}

export interface IdentityDocumentField {
    
    Type?: AnalyzeIDDetections;
    
    ValueDetection?: AnalyzeIDDetections;
}

export interface IdentityDocument {
    
    DocumentIndex?: number;
    
    IdentityDocumentFields?: IdentityDocumentField[];
}
export interface AnalyzeIDResponse {
    
    IdentityDocuments?: IdentityDocument[];
    
    DocumentMetadata?: DocumentMetadata;
    
    AnalyzeIDModelVersion?: string;
}
export interface DetectDocumentTextRequest {
    
    Document: Document | undefined;
}
export interface DetectDocumentTextResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    Blocks?: Block[];
    
    DetectDocumentTextModelVersion?: string;
}

export interface DocumentLocation {
    
    S3Object?: S3Object;
}
export interface GetDocumentAnalysisRequest {
    
    JobId: string | undefined;
    
    MaxResults?: number;
    
    NextToken?: string;
}
export declare enum JobStatus {
    FAILED = "FAILED",
    IN_PROGRESS = "IN_PROGRESS",
    PARTIAL_SUCCESS = "PARTIAL_SUCCESS",
    SUCCEEDED = "SUCCEEDED"
}

export interface Warning {
    
    ErrorCode?: string;
    
    Pages?: number[];
}
export interface GetDocumentAnalysisResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    JobStatus?: JobStatus | string;
    
    NextToken?: string;
    
    Blocks?: Block[];
    
    Warnings?: Warning[];
    
    StatusMessage?: string;
    
    AnalyzeDocumentModelVersion?: string;
}

export declare class InvalidJobIdException extends __BaseException {
    readonly name: "InvalidJobIdException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<InvalidJobIdException, __BaseException>);
}

export declare class InvalidKMSKeyException extends __BaseException {
    readonly name: "InvalidKMSKeyException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<InvalidKMSKeyException, __BaseException>);
}
export interface GetDocumentTextDetectionRequest {
    
    JobId: string | undefined;
    
    MaxResults?: number;
    
    NextToken?: string;
}
export interface GetDocumentTextDetectionResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    JobStatus?: JobStatus | string;
    
    NextToken?: string;
    
    Blocks?: Block[];
    
    Warnings?: Warning[];
    
    StatusMessage?: string;
    
    DetectDocumentTextModelVersion?: string;
}
export interface GetExpenseAnalysisRequest {
    
    JobId: string | undefined;
    
    MaxResults?: number;
    
    NextToken?: string;
}
export interface GetExpenseAnalysisResponse {
    
    DocumentMetadata?: DocumentMetadata;
    
    JobStatus?: JobStatus | string;
    
    NextToken?: string;
    
    ExpenseDocuments?: ExpenseDocument[];
    
    Warnings?: Warning[];
    
    StatusMessage?: string;
    
    AnalyzeExpenseModelVersion?: string;
}

export declare class IdempotentParameterMismatchException extends __BaseException {
    readonly name: "IdempotentParameterMismatchException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<IdempotentParameterMismatchException, __BaseException>);
}

export declare class LimitExceededException extends __BaseException {
    readonly name: "LimitExceededException";
    readonly $fault: "client";
    Message?: string;
    Code?: string;
    
    constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
}

export interface NotificationChannel {
    
    SNSTopicArn: string | undefined;
    
    RoleArn: string | undefined;
}

export interface OutputConfig {
    
    S3Bucket: string | undefined;
    
    S3Prefix?: string;
}
export interface StartDocumentAnalysisRequest {
    
    DocumentLocation: DocumentLocation | undefined;
    
    FeatureTypes: (FeatureType | string)[] | undefined;
    
    ClientRequestToken?: string;
    
    JobTag?: string;
    
    NotificationChannel?: NotificationChannel;
    
    OutputConfig?: OutputConfig;
    
    KMSKeyId?: string;
    
    QueriesConfig?: QueriesConfig;
}
export interface StartDocumentAnalysisResponse {
    
    JobId?: string;
}
export interface StartDocumentTextDetectionRequest {
    
    DocumentLocation: DocumentLocation | undefined;
    
    ClientRequestToken?: string;
    
    JobTag?: string;
    
    NotificationChannel?: NotificationChannel;
    
    OutputConfig?: OutputConfig;
    
    KMSKeyId?: string;
}
export interface StartDocumentTextDetectionResponse {
    
    JobId?: string;
}
export interface StartExpenseAnalysisRequest {
    
    DocumentLocation: DocumentLocation | undefined;
    
    ClientRequestToken?: string;
    
    JobTag?: string;
    
    NotificationChannel?: NotificationChannel;
    
    OutputConfig?: OutputConfig;
    
    KMSKeyId?: string;
}
export interface StartExpenseAnalysisResponse {
    
    JobId?: string;
}

export declare const S3ObjectFilterSensitiveLog: (obj: S3Object) => any;

export declare const DocumentFilterSensitiveLog: (obj: Document) => any;

export declare const HumanLoopDataAttributesFilterSensitiveLog: (obj: HumanLoopDataAttributes) => any;

export declare const HumanLoopConfigFilterSensitiveLog: (obj: HumanLoopConfig) => any;

export declare const QueryFilterSensitiveLog: (obj: Query) => any;

export declare const QueriesConfigFilterSensitiveLog: (obj: QueriesConfig) => any;

export declare const AnalyzeDocumentRequestFilterSensitiveLog: (obj: AnalyzeDocumentRequest) => any;

export declare const BoundingBoxFilterSensitiveLog: (obj: BoundingBox) => any;

export declare const PointFilterSensitiveLog: (obj: Point) => any;

export declare const GeometryFilterSensitiveLog: (obj: Geometry) => any;

export declare const RelationshipFilterSensitiveLog: (obj: Relationship) => any;

export declare const BlockFilterSensitiveLog: (obj: Block) => any;

export declare const DocumentMetadataFilterSensitiveLog: (obj: DocumentMetadata) => any;

export declare const HumanLoopActivationOutputFilterSensitiveLog: (obj: HumanLoopActivationOutput) => any;

export declare const AnalyzeDocumentResponseFilterSensitiveLog: (obj: AnalyzeDocumentResponse) => any;

export declare const AnalyzeExpenseRequestFilterSensitiveLog: (obj: AnalyzeExpenseRequest) => any;

export declare const ExpenseDetectionFilterSensitiveLog: (obj: ExpenseDetection) => any;

export declare const ExpenseTypeFilterSensitiveLog: (obj: ExpenseType) => any;

export declare const ExpenseFieldFilterSensitiveLog: (obj: ExpenseField) => any;

export declare const LineItemFieldsFilterSensitiveLog: (obj: LineItemFields) => any;

export declare const LineItemGroupFilterSensitiveLog: (obj: LineItemGroup) => any;

export declare const ExpenseDocumentFilterSensitiveLog: (obj: ExpenseDocument) => any;

export declare const AnalyzeExpenseResponseFilterSensitiveLog: (obj: AnalyzeExpenseResponse) => any;

export declare const AnalyzeIDRequestFilterSensitiveLog: (obj: AnalyzeIDRequest) => any;

export declare const NormalizedValueFilterSensitiveLog: (obj: NormalizedValue) => any;

export declare const AnalyzeIDDetectionsFilterSensitiveLog: (obj: AnalyzeIDDetections) => any;

export declare const IdentityDocumentFieldFilterSensitiveLog: (obj: IdentityDocumentField) => any;

export declare const IdentityDocumentFilterSensitiveLog: (obj: IdentityDocument) => any;

export declare const AnalyzeIDResponseFilterSensitiveLog: (obj: AnalyzeIDResponse) => any;

export declare const DetectDocumentTextRequestFilterSensitiveLog: (obj: DetectDocumentTextRequest) => any;

export declare const DetectDocumentTextResponseFilterSensitiveLog: (obj: DetectDocumentTextResponse) => any;

export declare const DocumentLocationFilterSensitiveLog: (obj: DocumentLocation) => any;

export declare const GetDocumentAnalysisRequestFilterSensitiveLog: (obj: GetDocumentAnalysisRequest) => any;

export declare const WarningFilterSensitiveLog: (obj: Warning) => any;

export declare const GetDocumentAnalysisResponseFilterSensitiveLog: (obj: GetDocumentAnalysisResponse) => any;

export declare const GetDocumentTextDetectionRequestFilterSensitiveLog: (obj: GetDocumentTextDetectionRequest) => any;

export declare const GetDocumentTextDetectionResponseFilterSensitiveLog: (obj: GetDocumentTextDetectionResponse) => any;

export declare const GetExpenseAnalysisRequestFilterSensitiveLog: (obj: GetExpenseAnalysisRequest) => any;

export declare const GetExpenseAnalysisResponseFilterSensitiveLog: (obj: GetExpenseAnalysisResponse) => any;

export declare const NotificationChannelFilterSensitiveLog: (obj: NotificationChannel) => any;

export declare const OutputConfigFilterSensitiveLog: (obj: OutputConfig) => any;

export declare const StartDocumentAnalysisRequestFilterSensitiveLog: (obj: StartDocumentAnalysisRequest) => any;

export declare const StartDocumentAnalysisResponseFilterSensitiveLog: (obj: StartDocumentAnalysisResponse) => any;

export declare const StartDocumentTextDetectionRequestFilterSensitiveLog: (obj: StartDocumentTextDetectionRequest) => any;

export declare const StartDocumentTextDetectionResponseFilterSensitiveLog: (obj: StartDocumentTextDetectionResponse) => any;

export declare const StartExpenseAnalysisRequestFilterSensitiveLog: (obj: StartExpenseAnalysisRequest) => any;

export declare const StartExpenseAnalysisResponseFilterSensitiveLog: (obj: StartExpenseAnalysisResponse) => any;
