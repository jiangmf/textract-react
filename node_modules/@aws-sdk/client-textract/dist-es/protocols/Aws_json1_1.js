import { __assign, __awaiter, __generator } from "tslib";
import { HttpRequest as __HttpRequest } from "@aws-sdk/protocol-http";
import { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectString as __expectString, LazyJsonString as __LazyJsonString, limitedParseFloat32 as __limitedParseFloat32, throwDefaultError, } from "@aws-sdk/smithy-client";
import { AccessDeniedException, BadDocumentException, DocumentTooLargeException, HumanLoopQuotaExceededException, IdempotentParameterMismatchException, InternalServerError, InvalidJobIdException, InvalidKMSKeyException, InvalidParameterException, InvalidS3ObjectException, LimitExceededException, ProvisionedThroughputExceededException, ThrottlingException, UnsupportedDocumentException, } from "../models/models_0";
import { TextractServiceException as __BaseException } from "../models/TextractServiceException";
export var serializeAws_json1_1AnalyzeDocumentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.AnalyzeDocument",
        };
        body = JSON.stringify(serializeAws_json1_1AnalyzeDocumentRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1AnalyzeExpenseCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.AnalyzeExpense",
        };
        body = JSON.stringify(serializeAws_json1_1AnalyzeExpenseRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1AnalyzeIDCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.AnalyzeID",
        };
        body = JSON.stringify(serializeAws_json1_1AnalyzeIDRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DetectDocumentTextCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.DetectDocumentText",
        };
        body = JSON.stringify(serializeAws_json1_1DetectDocumentTextRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetDocumentAnalysisCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.GetDocumentAnalysis",
        };
        body = JSON.stringify(serializeAws_json1_1GetDocumentAnalysisRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetDocumentTextDetectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.GetDocumentTextDetection",
        };
        body = JSON.stringify(serializeAws_json1_1GetDocumentTextDetectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1GetExpenseAnalysisCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.GetExpenseAnalysis",
        };
        body = JSON.stringify(serializeAws_json1_1GetExpenseAnalysisRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StartDocumentAnalysisCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.StartDocumentAnalysis",
        };
        body = JSON.stringify(serializeAws_json1_1StartDocumentAnalysisRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StartDocumentTextDetectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.StartDocumentTextDetection",
        };
        body = JSON.stringify(serializeAws_json1_1StartDocumentTextDetectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StartExpenseAnalysisCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "Textract.StartExpenseAnalysis",
        };
        body = JSON.stringify(serializeAws_json1_1StartExpenseAnalysisRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var deserializeAws_json1_1AnalyzeDocumentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1AnalyzeDocumentCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1AnalyzeDocumentResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1AnalyzeDocumentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "HumanLoopQuotaExceededException": return [3, 8];
                    case "com.amazonaws.textract#HumanLoopQuotaExceededException": return [3, 8];
                    case "InternalServerError": return [3, 10];
                    case "com.amazonaws.textract#InternalServerError": return [3, 10];
                    case "InvalidParameterException": return [3, 12];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 12];
                    case "InvalidS3ObjectException": return [3, 14];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 14];
                    case "ProvisionedThroughputExceededException": return [3, 16];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 16];
                    case "ThrottlingException": return [3, 18];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 18];
                    case "UnsupportedDocumentException": return [3, 20];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 20];
                }
                return [3, 22];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 21: throw _d.sent();
            case 22:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 23;
            case 23: return [2];
        }
    });
}); };
export var deserializeAws_json1_1AnalyzeExpenseCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1AnalyzeExpenseCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1AnalyzeExpenseResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1AnalyzeExpenseCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "InternalServerError": return [3, 8];
                    case "com.amazonaws.textract#InternalServerError": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                    case "UnsupportedDocumentException": return [3, 18];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 18];
                }
                return [3, 20];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 21;
            case 21: return [2];
        }
    });
}); };
export var deserializeAws_json1_1AnalyzeIDCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1AnalyzeIDCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1AnalyzeIDResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1AnalyzeIDCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "InternalServerError": return [3, 8];
                    case "com.amazonaws.textract#InternalServerError": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                    case "UnsupportedDocumentException": return [3, 18];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 18];
                }
                return [3, 20];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 21;
            case 21: return [2];
        }
    });
}); };
export var deserializeAws_json1_1DetectDocumentTextCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DetectDocumentTextCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DetectDocumentTextResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DetectDocumentTextCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "InternalServerError": return [3, 8];
                    case "com.amazonaws.textract#InternalServerError": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                    case "UnsupportedDocumentException": return [3, 18];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 18];
                }
                return [3, 20];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 21;
            case 21: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetDocumentAnalysisCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetDocumentAnalysisCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetDocumentAnalysisResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetDocumentAnalysisCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "InternalServerError": return [3, 4];
                    case "com.amazonaws.textract#InternalServerError": return [3, 4];
                    case "InvalidJobIdException": return [3, 6];
                    case "com.amazonaws.textract#InvalidJobIdException": return [3, 6];
                    case "InvalidKMSKeyException": return [3, 8];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                }
                return [3, 18];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 19;
            case 19: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetDocumentTextDetectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetDocumentTextDetectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetDocumentTextDetectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetDocumentTextDetectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "InternalServerError": return [3, 4];
                    case "com.amazonaws.textract#InternalServerError": return [3, 4];
                    case "InvalidJobIdException": return [3, 6];
                    case "com.amazonaws.textract#InvalidJobIdException": return [3, 6];
                    case "InvalidKMSKeyException": return [3, 8];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                }
                return [3, 18];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 19;
            case 19: return [2];
        }
    });
}); };
export var deserializeAws_json1_1GetExpenseAnalysisCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1GetExpenseAnalysisCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1GetExpenseAnalysisResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1GetExpenseAnalysisCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "InternalServerError": return [3, 4];
                    case "com.amazonaws.textract#InternalServerError": return [3, 4];
                    case "InvalidJobIdException": return [3, 6];
                    case "com.amazonaws.textract#InvalidJobIdException": return [3, 6];
                    case "InvalidKMSKeyException": return [3, 8];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 8];
                    case "InvalidParameterException": return [3, 10];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 10];
                    case "InvalidS3ObjectException": return [3, 12];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 12];
                    case "ProvisionedThroughputExceededException": return [3, 14];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 14];
                    case "ThrottlingException": return [3, 16];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 16];
                }
                return [3, 18];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 19;
            case 19: return [2];
        }
    });
}); };
export var deserializeAws_json1_1StartDocumentAnalysisCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StartDocumentAnalysisCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StartDocumentAnalysisResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StartDocumentAnalysisCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "IdempotentParameterMismatchException": return [3, 8];
                    case "com.amazonaws.textract#IdempotentParameterMismatchException": return [3, 8];
                    case "InternalServerError": return [3, 10];
                    case "com.amazonaws.textract#InternalServerError": return [3, 10];
                    case "InvalidKMSKeyException": return [3, 12];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 12];
                    case "InvalidParameterException": return [3, 14];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 14];
                    case "InvalidS3ObjectException": return [3, 16];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 16];
                    case "LimitExceededException": return [3, 18];
                    case "com.amazonaws.textract#LimitExceededException": return [3, 18];
                    case "ProvisionedThroughputExceededException": return [3, 20];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 20];
                    case "ThrottlingException": return [3, 22];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 22];
                    case "UnsupportedDocumentException": return [3, 24];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 24];
                }
                return [3, 26];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 21: throw _d.sent();
            case 22: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 23: throw _d.sent();
            case 24: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 25: throw _d.sent();
            case 26:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 27;
            case 27: return [2];
        }
    });
}); };
export var deserializeAws_json1_1StartDocumentTextDetectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StartDocumentTextDetectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StartDocumentTextDetectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StartDocumentTextDetectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "IdempotentParameterMismatchException": return [3, 8];
                    case "com.amazonaws.textract#IdempotentParameterMismatchException": return [3, 8];
                    case "InternalServerError": return [3, 10];
                    case "com.amazonaws.textract#InternalServerError": return [3, 10];
                    case "InvalidKMSKeyException": return [3, 12];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 12];
                    case "InvalidParameterException": return [3, 14];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 14];
                    case "InvalidS3ObjectException": return [3, 16];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 16];
                    case "LimitExceededException": return [3, 18];
                    case "com.amazonaws.textract#LimitExceededException": return [3, 18];
                    case "ProvisionedThroughputExceededException": return [3, 20];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 20];
                    case "ThrottlingException": return [3, 22];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 22];
                    case "UnsupportedDocumentException": return [3, 24];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 24];
                }
                return [3, 26];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 21: throw _d.sent();
            case 22: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 23: throw _d.sent();
            case 24: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 25: throw _d.sent();
            case 26:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 27;
            case 27: return [2];
        }
    });
}); };
export var deserializeAws_json1_1StartExpenseAnalysisCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StartExpenseAnalysisCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StartExpenseAnalysisResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StartExpenseAnalysisCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, errorCode, _b, parsedBody;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "AccessDeniedException": return [3, 2];
                    case "com.amazonaws.textract#AccessDeniedException": return [3, 2];
                    case "BadDocumentException": return [3, 4];
                    case "com.amazonaws.textract#BadDocumentException": return [3, 4];
                    case "DocumentTooLargeException": return [3, 6];
                    case "com.amazonaws.textract#DocumentTooLargeException": return [3, 6];
                    case "IdempotentParameterMismatchException": return [3, 8];
                    case "com.amazonaws.textract#IdempotentParameterMismatchException": return [3, 8];
                    case "InternalServerError": return [3, 10];
                    case "com.amazonaws.textract#InternalServerError": return [3, 10];
                    case "InvalidKMSKeyException": return [3, 12];
                    case "com.amazonaws.textract#InvalidKMSKeyException": return [3, 12];
                    case "InvalidParameterException": return [3, 14];
                    case "com.amazonaws.textract#InvalidParameterException": return [3, 14];
                    case "InvalidS3ObjectException": return [3, 16];
                    case "com.amazonaws.textract#InvalidS3ObjectException": return [3, 16];
                    case "LimitExceededException": return [3, 18];
                    case "com.amazonaws.textract#LimitExceededException": return [3, 18];
                    case "ProvisionedThroughputExceededException": return [3, 20];
                    case "com.amazonaws.textract#ProvisionedThroughputExceededException": return [3, 20];
                    case "ThrottlingException": return [3, 22];
                    case "com.amazonaws.textract#ThrottlingException": return [3, 22];
                    case "UnsupportedDocumentException": return [3, 24];
                    case "com.amazonaws.textract#UnsupportedDocumentException": return [3, 24];
                }
                return [3, 26];
            case 2: return [4, deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16: return [4, deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];
            case 17: throw _d.sent();
            case 18: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 19: throw _d.sent();
            case 20: return [4, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];
            case 21: throw _d.sent();
            case 22: return [4, deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];
            case 23: throw _d.sent();
            case 24: return [4, deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];
            case 25: throw _d.sent();
            case 26:
                parsedBody = parsedOutput.body;
                throwDefaultError({
                    output: output,
                    parsedBody: parsedBody,
                    exceptionCtor: __BaseException,
                    errorCode: errorCode,
                });
                _d.label = 27;
            case 27: return [2];
        }
    });
}); };
var deserializeAws_json1_1AccessDeniedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1AccessDeniedException(body, context);
        exception = new AccessDeniedException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1BadDocumentExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1BadDocumentException(body, context);
        exception = new BadDocumentException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1DocumentTooLargeExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1DocumentTooLargeException(body, context);
        exception = new DocumentTooLargeException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1HumanLoopQuotaExceededException(body, context);
        exception = new HumanLoopQuotaExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1IdempotentParameterMismatchException(body, context);
        exception = new IdempotentParameterMismatchException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InternalServerErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InternalServerError(body, context);
        exception = new InternalServerError(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidJobIdExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidJobIdException(body, context);
        exception = new InvalidJobIdException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidKMSKeyExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidKMSKeyException(body, context);
        exception = new InvalidKMSKeyException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidParameterExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidParameterException(body, context);
        exception = new InvalidParameterException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidS3ObjectExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidS3ObjectException(body, context);
        exception = new InvalidS3ObjectException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1LimitExceededException(body, context);
        exception = new LimitExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);
        exception = new ProvisionedThroughputExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ThrottlingExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ThrottlingException(body, context);
        exception = new ThrottlingException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1UnsupportedDocumentExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1UnsupportedDocumentException(body, context);
        exception = new UnsupportedDocumentException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var serializeAws_json1_1AnalyzeDocumentRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.Document != null && { Document: serializeAws_json1_1Document(input.Document, context) })), (input.FeatureTypes != null && { FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context) })), (input.HumanLoopConfig != null && {
        HumanLoopConfig: serializeAws_json1_1HumanLoopConfig(input.HumanLoopConfig, context),
    })), (input.QueriesConfig != null && {
        QueriesConfig: serializeAws_json1_1QueriesConfig(input.QueriesConfig, context),
    }));
};
var serializeAws_json1_1AnalyzeExpenseRequest = function (input, context) {
    return __assign({}, (input.Document != null && { Document: serializeAws_json1_1Document(input.Document, context) }));
};
var serializeAws_json1_1AnalyzeIDRequest = function (input, context) {
    return __assign({}, (input.DocumentPages != null && {
        DocumentPages: serializeAws_json1_1DocumentPages(input.DocumentPages, context),
    }));
};
var serializeAws_json1_1ContentClassifiers = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1DetectDocumentTextRequest = function (input, context) {
    return __assign({}, (input.Document != null && { Document: serializeAws_json1_1Document(input.Document, context) }));
};
var serializeAws_json1_1Document = function (input, context) {
    return __assign(__assign({}, (input.Bytes != null && { Bytes: context.base64Encoder(input.Bytes) })), (input.S3Object != null && { S3Object: serializeAws_json1_1S3Object(input.S3Object, context) }));
};
var serializeAws_json1_1DocumentLocation = function (input, context) {
    return __assign({}, (input.S3Object != null && { S3Object: serializeAws_json1_1S3Object(input.S3Object, context) }));
};
var serializeAws_json1_1DocumentPages = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return serializeAws_json1_1Document(entry, context);
    });
};
var serializeAws_json1_1FeatureTypes = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1GetDocumentAnalysisRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.JobId != null && { JobId: input.JobId })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1GetDocumentTextDetectionRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.JobId != null && { JobId: input.JobId })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1GetExpenseAnalysisRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.JobId != null && { JobId: input.JobId })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1HumanLoopConfig = function (input, context) {
    return __assign(__assign(__assign({}, (input.DataAttributes != null && {
        DataAttributes: serializeAws_json1_1HumanLoopDataAttributes(input.DataAttributes, context),
    })), (input.FlowDefinitionArn != null && { FlowDefinitionArn: input.FlowDefinitionArn })), (input.HumanLoopName != null && { HumanLoopName: input.HumanLoopName }));
};
var serializeAws_json1_1HumanLoopDataAttributes = function (input, context) {
    return __assign({}, (input.ContentClassifiers != null && {
        ContentClassifiers: serializeAws_json1_1ContentClassifiers(input.ContentClassifiers, context),
    }));
};
var serializeAws_json1_1NotificationChannel = function (input, context) {
    return __assign(__assign({}, (input.RoleArn != null && { RoleArn: input.RoleArn })), (input.SNSTopicArn != null && { SNSTopicArn: input.SNSTopicArn }));
};
var serializeAws_json1_1OutputConfig = function (input, context) {
    return __assign(__assign({}, (input.S3Bucket != null && { S3Bucket: input.S3Bucket })), (input.S3Prefix != null && { S3Prefix: input.S3Prefix }));
};
var serializeAws_json1_1Queries = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return serializeAws_json1_1Query(entry, context);
    });
};
var serializeAws_json1_1QueriesConfig = function (input, context) {
    return __assign({}, (input.Queries != null && { Queries: serializeAws_json1_1Queries(input.Queries, context) }));
};
var serializeAws_json1_1Query = function (input, context) {
    return __assign(__assign(__assign({}, (input.Alias != null && { Alias: input.Alias })), (input.Pages != null && { Pages: serializeAws_json1_1QueryPages(input.Pages, context) })), (input.Text != null && { Text: input.Text }));
};
var serializeAws_json1_1QueryPages = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        return entry;
    });
};
var serializeAws_json1_1S3Object = function (input, context) {
    return __assign(__assign(__assign({}, (input.Bucket != null && { Bucket: input.Bucket })), (input.Name != null && { Name: input.Name })), (input.Version != null && { Version: input.Version }));
};
var serializeAws_json1_1StartDocumentAnalysisRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.ClientRequestToken != null && { ClientRequestToken: input.ClientRequestToken })), (input.DocumentLocation != null && {
        DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context),
    })), (input.FeatureTypes != null && { FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context) })), (input.JobTag != null && { JobTag: input.JobTag })), (input.KMSKeyId != null && { KMSKeyId: input.KMSKeyId })), (input.NotificationChannel != null && {
        NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context),
    })), (input.OutputConfig != null && { OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context) })), (input.QueriesConfig != null && {
        QueriesConfig: serializeAws_json1_1QueriesConfig(input.QueriesConfig, context),
    }));
};
var serializeAws_json1_1StartDocumentTextDetectionRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.ClientRequestToken != null && { ClientRequestToken: input.ClientRequestToken })), (input.DocumentLocation != null && {
        DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context),
    })), (input.JobTag != null && { JobTag: input.JobTag })), (input.KMSKeyId != null && { KMSKeyId: input.KMSKeyId })), (input.NotificationChannel != null && {
        NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context),
    })), (input.OutputConfig != null && { OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context) }));
};
var serializeAws_json1_1StartExpenseAnalysisRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.ClientRequestToken != null && { ClientRequestToken: input.ClientRequestToken })), (input.DocumentLocation != null && {
        DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context),
    })), (input.JobTag != null && { JobTag: input.JobTag })), (input.KMSKeyId != null && { KMSKeyId: input.KMSKeyId })), (input.NotificationChannel != null && {
        NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context),
    })), (input.OutputConfig != null && { OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context) }));
};
var deserializeAws_json1_1AccessDeniedException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1AnalyzeDocumentResponse = function (output, context) {
    return {
        AnalyzeDocumentModelVersion: __expectString(output.AnalyzeDocumentModelVersion),
        Blocks: output.Blocks != null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        HumanLoopActivationOutput: output.HumanLoopActivationOutput != null
            ? deserializeAws_json1_1HumanLoopActivationOutput(output.HumanLoopActivationOutput, context)
            : undefined,
    };
};
var deserializeAws_json1_1AnalyzeExpenseResponse = function (output, context) {
    return {
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        ExpenseDocuments: output.ExpenseDocuments != null
            ? deserializeAws_json1_1ExpenseDocumentList(output.ExpenseDocuments, context)
            : undefined,
    };
};
var deserializeAws_json1_1AnalyzeIDDetections = function (output, context) {
    return {
        Confidence: __limitedParseFloat32(output.Confidence),
        NormalizedValue: output.NormalizedValue != null
            ? deserializeAws_json1_1NormalizedValue(output.NormalizedValue, context)
            : undefined,
        Text: __expectString(output.Text),
    };
};
var deserializeAws_json1_1AnalyzeIDResponse = function (output, context) {
    return {
        AnalyzeIDModelVersion: __expectString(output.AnalyzeIDModelVersion),
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        IdentityDocuments: output.IdentityDocuments != null
            ? deserializeAws_json1_1IdentityDocumentList(output.IdentityDocuments, context)
            : undefined,
    };
};
var deserializeAws_json1_1BadDocumentException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1Block = function (output, context) {
    return {
        BlockType: __expectString(output.BlockType),
        ColumnIndex: __expectInt32(output.ColumnIndex),
        ColumnSpan: __expectInt32(output.ColumnSpan),
        Confidence: __limitedParseFloat32(output.Confidence),
        EntityTypes: output.EntityTypes != null ? deserializeAws_json1_1EntityTypes(output.EntityTypes, context) : undefined,
        Geometry: output.Geometry != null ? deserializeAws_json1_1Geometry(output.Geometry, context) : undefined,
        Id: __expectString(output.Id),
        Page: __expectInt32(output.Page),
        Query: output.Query != null ? deserializeAws_json1_1Query(output.Query, context) : undefined,
        Relationships: output.Relationships != null ? deserializeAws_json1_1RelationshipList(output.Relationships, context) : undefined,
        RowIndex: __expectInt32(output.RowIndex),
        RowSpan: __expectInt32(output.RowSpan),
        SelectionStatus: __expectString(output.SelectionStatus),
        Text: __expectString(output.Text),
        TextType: __expectString(output.TextType),
    };
};
var deserializeAws_json1_1BlockList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Block(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1BoundingBox = function (output, context) {
    return {
        Height: __limitedParseFloat32(output.Height),
        Left: __limitedParseFloat32(output.Left),
        Top: __limitedParseFloat32(output.Top),
        Width: __limitedParseFloat32(output.Width),
    };
};
var deserializeAws_json1_1DetectDocumentTextResponse = function (output, context) {
    return {
        Blocks: output.Blocks != null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,
        DetectDocumentTextModelVersion: __expectString(output.DetectDocumentTextModelVersion),
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
    };
};
var deserializeAws_json1_1DocumentMetadata = function (output, context) {
    return {
        Pages: __expectInt32(output.Pages),
    };
};
var deserializeAws_json1_1DocumentTooLargeException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1EntityTypes = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1ExpenseDetection = function (output, context) {
    return {
        Confidence: __limitedParseFloat32(output.Confidence),
        Geometry: output.Geometry != null ? deserializeAws_json1_1Geometry(output.Geometry, context) : undefined,
        Text: __expectString(output.Text),
    };
};
var deserializeAws_json1_1ExpenseDocument = function (output, context) {
    return {
        ExpenseIndex: __expectInt32(output.ExpenseIndex),
        LineItemGroups: output.LineItemGroups != null
            ? deserializeAws_json1_1LineItemGroupList(output.LineItemGroups, context)
            : undefined,
        SummaryFields: output.SummaryFields != null ? deserializeAws_json1_1ExpenseFieldList(output.SummaryFields, context) : undefined,
    };
};
var deserializeAws_json1_1ExpenseDocumentList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ExpenseDocument(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ExpenseField = function (output, context) {
    return {
        LabelDetection: output.LabelDetection != null
            ? deserializeAws_json1_1ExpenseDetection(output.LabelDetection, context)
            : undefined,
        PageNumber: __expectInt32(output.PageNumber),
        Type: output.Type != null ? deserializeAws_json1_1ExpenseType(output.Type, context) : undefined,
        ValueDetection: output.ValueDetection != null
            ? deserializeAws_json1_1ExpenseDetection(output.ValueDetection, context)
            : undefined,
    };
};
var deserializeAws_json1_1ExpenseFieldList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ExpenseField(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ExpenseType = function (output, context) {
    return {
        Confidence: __limitedParseFloat32(output.Confidence),
        Text: __expectString(output.Text),
    };
};
var deserializeAws_json1_1Geometry = function (output, context) {
    return {
        BoundingBox: output.BoundingBox != null ? deserializeAws_json1_1BoundingBox(output.BoundingBox, context) : undefined,
        Polygon: output.Polygon != null ? deserializeAws_json1_1Polygon(output.Polygon, context) : undefined,
    };
};
var deserializeAws_json1_1GetDocumentAnalysisResponse = function (output, context) {
    return {
        AnalyzeDocumentModelVersion: __expectString(output.AnalyzeDocumentModelVersion),
        Blocks: output.Blocks != null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        JobStatus: __expectString(output.JobStatus),
        NextToken: __expectString(output.NextToken),
        StatusMessage: __expectString(output.StatusMessage),
        Warnings: output.Warnings != null ? deserializeAws_json1_1Warnings(output.Warnings, context) : undefined,
    };
};
var deserializeAws_json1_1GetDocumentTextDetectionResponse = function (output, context) {
    return {
        Blocks: output.Blocks != null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,
        DetectDocumentTextModelVersion: __expectString(output.DetectDocumentTextModelVersion),
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        JobStatus: __expectString(output.JobStatus),
        NextToken: __expectString(output.NextToken),
        StatusMessage: __expectString(output.StatusMessage),
        Warnings: output.Warnings != null ? deserializeAws_json1_1Warnings(output.Warnings, context) : undefined,
    };
};
var deserializeAws_json1_1GetExpenseAnalysisResponse = function (output, context) {
    return {
        AnalyzeExpenseModelVersion: __expectString(output.AnalyzeExpenseModelVersion),
        DocumentMetadata: output.DocumentMetadata != null
            ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)
            : undefined,
        ExpenseDocuments: output.ExpenseDocuments != null
            ? deserializeAws_json1_1ExpenseDocumentList(output.ExpenseDocuments, context)
            : undefined,
        JobStatus: __expectString(output.JobStatus),
        NextToken: __expectString(output.NextToken),
        StatusMessage: __expectString(output.StatusMessage),
        Warnings: output.Warnings != null ? deserializeAws_json1_1Warnings(output.Warnings, context) : undefined,
    };
};
var deserializeAws_json1_1HumanLoopActivationOutput = function (output, context) {
    return {
        HumanLoopActivationConditionsEvaluationResults: output.HumanLoopActivationConditionsEvaluationResults != null
            ? new __LazyJsonString(output.HumanLoopActivationConditionsEvaluationResults)
            : undefined,
        HumanLoopActivationReasons: output.HumanLoopActivationReasons != null
            ? deserializeAws_json1_1HumanLoopActivationReasons(output.HumanLoopActivationReasons, context)
            : undefined,
        HumanLoopArn: __expectString(output.HumanLoopArn),
    };
};
var deserializeAws_json1_1HumanLoopActivationReasons = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1HumanLoopQuotaExceededException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
        QuotaCode: __expectString(output.QuotaCode),
        ResourceType: __expectString(output.ResourceType),
        ServiceCode: __expectString(output.ServiceCode),
    };
};
var deserializeAws_json1_1IdempotentParameterMismatchException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1IdentityDocument = function (output, context) {
    return {
        DocumentIndex: __expectInt32(output.DocumentIndex),
        IdentityDocumentFields: output.IdentityDocumentFields != null
            ? deserializeAws_json1_1IdentityDocumentFieldList(output.IdentityDocumentFields, context)
            : undefined,
    };
};
var deserializeAws_json1_1IdentityDocumentField = function (output, context) {
    return {
        Type: output.Type != null ? deserializeAws_json1_1AnalyzeIDDetections(output.Type, context) : undefined,
        ValueDetection: output.ValueDetection != null
            ? deserializeAws_json1_1AnalyzeIDDetections(output.ValueDetection, context)
            : undefined,
    };
};
var deserializeAws_json1_1IdentityDocumentFieldList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1IdentityDocumentField(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1IdentityDocumentList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1IdentityDocument(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1IdList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1InternalServerError = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1InvalidJobIdException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1InvalidKMSKeyException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1InvalidParameterException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1InvalidS3ObjectException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1LimitExceededException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1LineItemFields = function (output, context) {
    return {
        LineItemExpenseFields: output.LineItemExpenseFields != null
            ? deserializeAws_json1_1ExpenseFieldList(output.LineItemExpenseFields, context)
            : undefined,
    };
};
var deserializeAws_json1_1LineItemGroup = function (output, context) {
    return {
        LineItemGroupIndex: __expectInt32(output.LineItemGroupIndex),
        LineItems: output.LineItems != null ? deserializeAws_json1_1LineItemList(output.LineItems, context) : undefined,
    };
};
var deserializeAws_json1_1LineItemGroupList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1LineItemGroup(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1LineItemList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1LineItemFields(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1NormalizedValue = function (output, context) {
    return {
        Value: __expectString(output.Value),
        ValueType: __expectString(output.ValueType),
    };
};
var deserializeAws_json1_1Pages = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectInt32(entry);
    });
    return retVal;
};
var deserializeAws_json1_1Point = function (output, context) {
    return {
        X: __limitedParseFloat32(output.X),
        Y: __limitedParseFloat32(output.Y),
    };
};
var deserializeAws_json1_1Polygon = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Point(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1Query = function (output, context) {
    return {
        Alias: __expectString(output.Alias),
        Pages: output.Pages != null ? deserializeAws_json1_1QueryPages(output.Pages, context) : undefined,
        Text: __expectString(output.Text),
    };
};
var deserializeAws_json1_1QueryPages = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1Relationship = function (output, context) {
    return {
        Ids: output.Ids != null ? deserializeAws_json1_1IdList(output.Ids, context) : undefined,
        Type: __expectString(output.Type),
    };
};
var deserializeAws_json1_1RelationshipList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Relationship(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1StartDocumentAnalysisResponse = function (output, context) {
    return {
        JobId: __expectString(output.JobId),
    };
};
var deserializeAws_json1_1StartDocumentTextDetectionResponse = function (output, context) {
    return {
        JobId: __expectString(output.JobId),
    };
};
var deserializeAws_json1_1StartExpenseAnalysisResponse = function (output, context) {
    return {
        JobId: __expectString(output.JobId),
    };
};
var deserializeAws_json1_1ThrottlingException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1UnsupportedDocumentException = function (output, context) {
    return {
        Code: __expectString(output.Code),
        Message: __expectString(output.Message),
    };
};
var deserializeAws_json1_1Warning = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        Pages: output.Pages != null ? deserializeAws_json1_1Pages(output.Pages, context) : undefined,
    };
};
var deserializeAws_json1_1Warnings = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Warning(entry, context);
    });
    return retVal;
};
var deserializeMetadata = function (output) {
    var _a;
    return ({
        httpStatusCode: output.statusCode,
        requestId: (_a = output.headers["x-amzn-requestid"]) !== null && _a !== void 0 ? _a : output.headers["x-amzn-request-id"],
        extendedRequestId: output.headers["x-amz-id-2"],
        cfId: output.headers["x-amz-cf-id"],
    });
};
var collectBody = function (streamBody, context) {
    if (streamBody === void 0) { streamBody = new Uint8Array(); }
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
var collectBodyString = function (streamBody, context) {
    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });
};
var buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, hostname, _b, protocol, port, basePath, contents;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port, basePath = _a.path;
                contents = {
                    protocol: protocol,
                    hostname: hostname,
                    port: port,
                    method: "POST",
                    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
                    headers: headers,
                };
                if (resolvedHostname !== undefined) {
                    contents.hostname = resolvedHostname;
                }
                if (body !== undefined) {
                    contents.body = body;
                }
                return [2, new __HttpRequest(contents)];
        }
    });
}); };
var parseBody = function (streamBody, context) {
    return collectBodyString(streamBody, context).then(function (encoded) {
        if (encoded.length) {
            return JSON.parse(encoded);
        }
        return {};
    });
};
var loadRestJsonErrorCode = function (output, data) {
    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };
    var sanitizeErrorCode = function (rawValue) {
        var cleanValue = rawValue;
        if (typeof cleanValue === "number") {
            cleanValue = cleanValue.toString();
        }
        if (cleanValue.indexOf(":") >= 0) {
            cleanValue = cleanValue.split(":")[0];
        }
        if (cleanValue.indexOf("#") >= 0) {
            cleanValue = cleanValue.split("#")[1];
        }
        return cleanValue;
    };
    var headerKey = findKey(output.headers, "x-amzn-errortype");
    if (headerKey !== undefined) {
        return sanitizeErrorCode(output.headers[headerKey]);
    }
    if (data.code !== undefined) {
        return sanitizeErrorCode(data.code);
    }
    if (data["__type"] !== undefined) {
        return sanitizeErrorCode(data["__type"]);
    }
};
